src/environment/Map.cpp: In member function ‘void Map::render(SDL_Renderer*, Context&) const’:
src/environment/Map.cpp:65:32: warning: unused parameter ‘ren’ [-Wunused-parameter]
   65 | void Map::render(SDL_Renderer* ren, Context& ctx) const {
      |                  ~~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/13/memory:78,
                 from src/environment/../util/Context.hpp:5,
                 from src/environment/Map.hpp:4,
                 from src/environment/Map.cpp:5:
/usr/include/c++/13/bits/unique_ptr.h: In instantiation of ‘std::__detail::__unique_ptr_t<_Tp> std::make_unique(_Args&& ...) [with _Tp = Ground; _Args = {}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<Ground>]’:
src/environment/Map.cpp:42:33:   required from here
/usr/include/c++/13/bits/unique_ptr.h:1070:30: error: ‘Ground::Ground()’ is private within this context
 1070 |     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/environment/Map.cpp:2:
src/environment/Ground.hpp:8:9: note: declared private here
    8 |         Ground() : Square(SDL_Color {
      |         ^~~~~~
/usr/include/c++/13/bits/unique_ptr.h: In instantiation of ‘std::__detail::__unique_ptr_t<_Tp> std::make_unique(_Args&& ...) [with _Tp = Grass; _Args = {}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<Grass>]’:
src/environment/Map.cpp:44:32:   required from here
/usr/include/c++/13/bits/unique_ptr.h:1070:30: error: ‘Grass::Grass()’ is private within this context
 1070 |     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/environment/Map.cpp:3:
src/environment/Grass.hpp:8:9: note: declared private here
    8 |         Grass() : Square(SDL_Color {
      |         ^~~~~
/usr/include/c++/13/bits/unique_ptr.h: In instantiation of ‘std::__detail::__unique_ptr_t<_Tp> std::make_unique(_Args&& ...) [with _Tp = Watter; _Args = {}; __detail::__unique_ptr_t<_Tp> = __detail::__unique_ptr_t<Watter>]’:
src/environment/Map.cpp:46:33:   required from here
/usr/include/c++/13/bits/unique_ptr.h:1070:30: error: ‘Watter::Watter()’ is private within this context
 1070 |     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/environment/Map.cpp:1:
src/environment/Watter.hpp:8:9: note: declared private here
    8 |         Watter() : Square(SDL_Color {
      |         ^~~~~~
In file included from /usr/include/c++/13/ext/alloc_traits.h:34,
                 from /usr/include/c++/13/bits/basic_string.h:39,
                 from /usr/include/c++/13/string:54,
                 from src/environment/Square.hpp:4,
                 from src/environment/Watter.hpp:4:
/usr/include/c++/13/bits/alloc_traits.h: In instantiation of ‘static constexpr void std::allocator_traits<std::allocator<_CharT> >::construct(allocator_type&, _Up*, _Args&& ...) [with _Up = std::unique_ptr<Square>; _Args = {const std::unique_ptr<Square, std::default_delete<Square> >&}; _Tp = std::unique_ptr<Square>; allocator_type = std::allocator<std::unique_ptr<Square> >]’:
/usr/include/c++/13/bits/stl_vector.h:1286:30:   required from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::unique_ptr<Square>; _Alloc = std::allocator<std::unique_ptr<Square> >; value_type = std::unique_ptr<Square>]’
src/environment/Map.cpp:51:26:   required from here
/usr/include/c++/13/bits/alloc_traits.h:540:28: error: no matching function for call to ‘construct_at(std::unique_ptr<Square>*&, const std::unique_ptr<Square>&)’
  540 |           std::construct_at(__p, std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/13/bits/char_traits.h:57,
                 from /usr/include/c++/13/string:42:
/usr/include/c++/13/bits/stl_construct.h:94:5: note: candidate: ‘template<class _Tp, class ... _Args> constexpr decltype (::new(void*(0)) _Tp) std::construct_at(_Tp*, _Args&& ...)’
   94 |     construct_at(_Tp* __location, _Args&&... __args)
      |     ^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_construct.h:94:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_construct.h: In substitution of ‘template<class _Tp, class ... _Args> constexpr decltype (::new(void*(0)) _Tp) std::construct_at(_Tp*, _Args&& ...) [with _Tp = std::unique_ptr<Square>; _Args = {const std::unique_ptr<Square, std::default_delete<Square> >&}]’:
/usr/include/c++/13/bits/alloc_traits.h:540:21:   required from ‘static constexpr void std::allocator_traits<std::allocator<_CharT> >::construct(allocator_type&, _Up*, _Args&& ...) [with _Up = std::unique_ptr<Square>; _Args = {const std::unique_ptr<Square, std::default_delete<Square> >&}; _Tp = std::unique_ptr<Square>; allocator_type = std::allocator<std::unique_ptr<Square> >]’
/usr/include/c++/13/bits/stl_vector.h:1286:30:   required from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::unique_ptr<Square>; _Alloc = std::allocator<std::unique_ptr<Square> >; value_type = std::unique_ptr<Square>]’
src/environment/Map.cpp:51:26:   required from here
/usr/include/c++/13/bits/stl_construct.h:96:17: error: use of deleted function ‘std::unique_ptr<_Tp, _Dp>::unique_ptr(const std::unique_ptr<_Tp, _Dp>&) [with _Tp = Square; _Dp = std::default_delete<Square>]’
   96 |     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/13/bits/unique_ptr.h:522:7: note: declared here
  522 |       unique_ptr(const unique_ptr&) = delete;
      |       ^~~~~~~~~~
make: *** [Makefile:16 : build/stam] Erreur 1
